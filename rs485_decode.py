import struct

data = b':\x002!\x00\x01\x92\xc1U\x00\x00\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8 \x82\x17\x92\xc1U\x00\x00\x00AS\x92\xc1Un\x13L\x1c:\x002\x1c\x00\x02\x92n\x13L\x1c\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8 \x82\x17\x92\xc1U\x00\x00\x80\xac\xb6wR:\x002&\x00\x03\x92\xac\xb6wR\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8 \x82\x17\x92\xc1U\x00\x00\x90\xf1~\x92\xc1U\x00\x00P\xe20p\xca\x9e\xd9:\x002#\x00\x04\x92p\xca\x9e\xd9\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8 \x82\x17\x92\xc1U\x00\x00\xd0Q~\x92\xc1U\x00\x00,\xbc\xb5\t:\x002:\x00\x05\x92,\xbc\xb5\t\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8 \x82\x17\x92\xc1U\x00\x00\x80\x0ev\x92\xc1U\x00\x00P\xe20\x19\xfd\x7f\x00\x00\xd5e\x94\x91\xc1U\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0[.\xc5:\x002\x1d\x00\x06\x92\xc0[.\xc5\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8 \x82\x17\x92\xc1U\x00\x00`\x89@\x7fU\xba:\x002!\x00\x01\x00\x00\x00\x00\x00\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8\x00\x00\x00\x00\x00\x00\x00\x00\x00AS\x92\xc1Up\xba1\xba:\x002\x1c\x00\x02\x00p\xba1\xba\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8\x00\x00\x00\x00\x00\x00\x00\x00\x80\x10\x1c!\x87:\x002&\x00\x03\x00\x10\x1c!\x87\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8\x00\x00\x00\x00\x00\x00\x00\x00\x90\xf1~\x92\xc1U\x00\x00P\xe20\xba\x80A]:\x002#\x00\x04\x00\xba\x80A]\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8\x00\x00\x00\x00\x00\x00\x00\x00\xd0Q~\x92\xc1U\x00\x00\x88$y\xa5:\x002:\x00\x05\x00\x88$y\xa5\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8\x00\x00\x00\x00\x00\x00\x00\x00\x80\x0ev\x92\xc1U\x00\x00P\xe20\x19\xfd\x7f\x00\x00\xd5e\x94\x91\xc1U\x00\x00\x00\x00\x00\x00\x00\x00\x00\xccK\x06\xcc:\x002\x1d\x00\x06\x00\xccK\x06\xcc\x00\xeb\xb0\xb0\x10\xfe\xa4\xc8\x00\x00\x00\x00\x00\x00\x00\x00`\x89L\xcb06'

# Define the structure of the package
packet_format = 'Id'  # 'I' for uint32_t and 'd' for double
packet_size = struct.calcsize(packet_format)

# Decipher the data
for i in range(0, len(data), packet_size):
    packet = data[i:i + packet_size]
    if len(packet) == packet_size:
        id, value = struct.unpack(packet_format, packet)
        print(f'ID: {id}, Value: {value}')
